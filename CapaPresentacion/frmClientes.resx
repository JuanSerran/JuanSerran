<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABEFJREFUWEfNl+9vT1ccx7+tBxWN30wiFZF44Fn/HR57LNszkWWTZpVFWpEZoQgp
        W1Bj2diGbvNrwzAUEdVfvjkdNkVLUarf6/36nvupc26vkKhtn+SV7zf3c855nXvOveecW/i/RqWYLxaN
        E7RFm28MCn0k3MRCoTStUEimixliZsosMVt8IOak8J9r5ChDeepRH2iLNtO2X9uRCrGzRhVWiF3ie9Eq
        fhN/imuiR9wRA+JZygPxl+gQbeKMOCp+EvvFV2K5oG0cqWtMLOYumgQNPRZPxRMxKB6JhwIxwvvinrgr
        /ha3BZ3QbSZFQUe7BG1dF3+ITQIHLq+Mo3WpkkiGBXdmcpP2iX8EI2Cym6JbIGoXjNJVwUhcFOfFWcGo
        8B8HLq+Mo3hQyfcl/12cFIwwLq+MwzHPJgc6YzwPsLk3hgKYNoM2mDo6hvyY2CZweWUc5Q7YnWcl7wKd
        oQO/ii0Cl1fG4c4piZznwEahTGVlMlRbmzytro6v50AZylInvM4U8EalU5DfAZ5Um3OGzhhuaUlKpVIy
        0tWVPF6wIMqFkKMMZYf37o1yjMBhsVHg8so43GklkfN69Ru6k9LAQGIx0tOTPJRoNJ/CNXIW1OmfMGE0
        z/z/KDYIXF4Zh2OY7GmnE8ZgfX35rixeSPRAQsvzn2sWlKVO2MYvgrfsS4HLK+NwDJO9aiwuRnnla2wc
        04k+iSErp2y2DeaflfULgcsr43DHlbT3/FaGXnE/pxNZOWUom63P/H8r1gpcXhmHY/22RSYPlti7mU5Y
        cI0cZfLqMv/7xBqByyvjcMwThVnhXgfre19TU6p9FX2bN5dzeXXggGgRDQKXV8bhmCcKs7zSWB5Fzfnz
        YNgtuEYurw58J3aL1QKXV8bhmCdb22/k0JORM+zhdJCjTF5dtuWvxecCl1fG4di/w40lpDNHXmTOM88E
        ZSibrf+N0EEgWSVweWUc7gclTX4loF0NPsvIuyW+oBzwP+wEZakTtrFHNIvPBC6vjMPxoJj8UkpbVVUy
        1NmZNu3lHRKyzVoZ/nMt7AR1qGtlOGGxE9YJXF4Zh+NBsf2cnRHaampGG+a3XaJTQd7gGrmwLHUtz7Fs
        q1gpcHllHI6FAjnDyl3ZYeJaQ0My2NubXK6rK28qlstCjjKUpQ51LbdDsBN+InB5ZRyOhcJOMmxMBhsJ
        08NKGV7PgzKUpU54fbtgJ/xY4PLKOIq8p3aM4iQ8XnAQ4UC6XnA6xuWVcbR+qiRyO8OdENwJSzSNsFL+
        LFiwjgjWjUOC15ellreIHY8RYOPhmeL95xSEfJ1YInB5ZRyL5ylJ43aARI6Ya8iQIKBxnhemjOWVkWOR
        4T3nVeNp54Fjzhl2k7MI8fGCyyvjqBDNC1WAPdvuejzkbMHLxFyBI3XlBp9NHwo3SZ9TfF4Z9pkVMjXD
        lAyTU6pefZrR9lt/I/4nH6f/chQKLwFZB/4CMb5/WAAAAABJRU5ErkJggg==
</value>
  </data>
</root>